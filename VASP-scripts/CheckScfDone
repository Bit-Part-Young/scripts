#!/bin/bash


#-------------------------------- 检查 VASP 静态/自洽/scf 计算目录是否计算完成 --------------------------------
check_scf_done() {
  converged_dirs=()
  unconverged_dirs=()
  latest_step_array=()
  for dir in "$@"; do
    outcar_fn="$dir/OUTCAR"
    oszicar_fn="$dir/OSZICAR"

    dir=$(basename "${dir}")

    if [ ! -f "$outcar_fn" ]; then
      echo "Folder $dir OUTCAR doesn't exsists!"
    else
      nsw=$(grep 'NSW' OUTCAR | awk '{print $3}')
      if [[ $nsw -eq 0 ]]; then
        if grep -q "F=" "$oszicar_fn"; then
          converged_dirs+=("$dir")
        else
          latest_step=$(tail -n 1 "$oszicar_fn" | awk '{print $0}')
          latest_step_array+=("$latest_step")

          unconverged_dirs+=("$dir")
        fi
      else
        unconverged_dirs+=("$dir")
      fi
    fi
  done

  echo "Converged dirs (${#converged_dirs[@]}):"
  for dir in "${converged_dirs[@]}"; do
    echo "  $dir"
  done

  if [[ ${#unconverged_dirs[@]} -eq 0 ]]; then
    echo -e "\nAll VASP relaxation/optimization calulations dirs are converged!"
  else
    echo -e "\nUnconverged dirs (${#unconverged_dirs[@]}):"
    for ((i=0; i<${#unconverged_dirs[@]}; i++)); do
      echo "  ${unconverged_dirs[${i}]}, latest electronic step: ${latest_step_array[${i}]}"
    done
  fi

}


#-------------------------------- 获取帮助 --------------------------------
get_help() {
  script_name=$(basename "$0")

  echo -e "\nUsage: ${script_name} [dirs...]"

  echo -e "\nCheck VASP scf calculation dirs whether done."

  echo -e "\nOptions:"
  echo "    -h, --help    show this help message and exit"
  echo "    dirs          VASP scf calculation dirs"

  echo -e "\nExamples:"
  echo "    ${script_name} \${PWD}       # 当前目录"
  echo "    ${script_name} test1        # 单个目录"
  echo "    ${script_name} test1 test2  # 多个目录"
  echo "    ${script_name} .            # 当前目录下的所有子目录"

  exit 0
}


#-------------------------------- 主函数 --------------------------------
if [ $# -eq 0 ]; then
  get_help
  exit 0

elif [[ "$1" == "-h" || "$1" == "--help" ]]; then
  get_help

elif [[ "$1" == "." ]]; then
  for item in ./*; do
    if [[ -d ${item} ]]; then
      item=$(basename "${item}")
      check_scf_done "${item}"
    fi
  done

else
  check_scf_done "$@"
fi
